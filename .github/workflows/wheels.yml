name: Wheels

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
    paths-ignore:
      - '*.md'
  pull_request:
    branches:
      - 'main'
    paths-ignore:
      - '*.md'

jobs:
#  build_sdist:
#    name: Build SDist
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Build SDist
#        run: pipx run build --sdist
#
#      - name: Check metadata
#        run: pipx run twine check dist/*
#
#      - uses: actions/upload-artifact@v2
#        with:
#          path: dist/*.tar.gz

  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          # - ubuntu-latest
          # - macos-latest
          - windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set Win env vars
      if: matrix.os == 'windows-latest'
      run: |
        echo "CONAN_HOME=%USERPROFILE%\.conan" >> $GITHUB_ENV
        echo "CONAN_BUILD=$GITHUB_WORKSPACE\conan_build" >> $GITHUB_ENV

    - name: Cache Conan dependencies
      id: cache-conan
      uses: actions/cache@v2
      if: matrix.os == 'windows-latest'
      with:
        path:
          $env:USERPROFILE\.conan
          $GITHUB_WORKSPACE\conan_build
        key: conan-${{ hashFiles('conanfile.txt') }}-v1.2

    - name: Temp WTF
      if: steps.cache-conan.outputs.cache-hit == 'true'
      env:
        TEST: $env:USERPROFILE
      run: |
        echo "wrapped conan home ${{ env.CONAN_HOME }}"
        echo "wrapped conan build ${{ env.CONAN_BUILD }}"
        echo "Dir conan_build"
        dir "${{ env.CONAN_BUILD }}"
        echo "Dir .conan"
        dir "${{ env.CONAN_HOME }}"
      shell: cmd

    - name: Set up Windows Python ${{ matrix.python_version }}
      uses: actions/setup-python@v2
      if: matrix.os == 'windows-latest' && steps.cache-conan.outputs.cache-hit != 'true'
      with:
        python-version: ${{ matrix.python_version }}

    - name: Install conan for Windows
      if: matrix.os == 'windows-latest' && steps.cache-conan.outputs.cache-hit != 'true'
      run: |
        pip install pip --upgrade
        pip install conan
        call .\conan_install.bat
      shell: cmd

#    - uses: pypa/cibuildwheel@v2.3.1
#      env:
#        MACOSX_DEPLOYMENT_TARGET: 10.14
#
#    - name: Verify clean directory
#      run: git diff --exit-code
#      shell: bash
#
#    - name: Upload wheels
#      uses: actions/upload-artifact@v2
#      with:
#        path: wheelhouse/*.whl

#  upload_all:
#    name: Upload if release
#    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
#    needs: [build_wheels, build_sdist]
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/setup-python@v2
#
#    - uses: actions/download-artifact@v2
#      with:
#        name: artifact
#        path: dist
#
#    - uses: pypa/gh-action-pypi-publish@v1.4.2
#      with:
#        user: jonathf
#        password: ${{ secrets.pypi_password }}
